########################################################
#### Article-output functions for common statistical tests
#### Written by Marian Sauter, 2017
#### Version 0.3 - 24.02.17
########################################################
## Produces article-ready output for a one- or two-sample t-test
##  obj: a t.test object (list of 9)
##  unit: the measurement unit, standard is ms
article.ttest <- function(obj=NULL, unit="ms") {
  
  estimatex <- signif(unname(obj$estimate[1]),4)
  estimatey <- NULL
  if(!is.na(obj$estimate[2])) estimatey <- signif(unname(obj$estimate[2]),4)
  df <- round(unname(obj$parameter),digits=2)
  statistic <- round(unname(obj$statistic),digits=2)
  
  p <- round(unname(obj$p.value),digits=3)
  if(p < 0.001) p <- "p < .001"
  else p <- paste("p = ",substring(toString(p), 2),sep="")
  
  ci1 <- signif(as.numeric(obj$conf.int[1]),4)
  ci2 <- signif(as.numeric(obj$conf.int[2]),4)
  
  if(is.null(estimatey)) est_string = paste("M = ", estimatex," ",unit, sep="") 
  else est_string = paste(estimatex," ",unit," vs ",estimatey," ",unit, sep="")

  string <- paste(
    est_string,
    "; t(",df,") = ",statistic, 
    ", ",p, 
    ", 95% CI [",ci1, " ",unit, ", ",ci2," ",unit,"]",
    sep="")
  
  return(string)
}

## Produces article-ready output for 
## a one- or two-sample t-test, cohensD,
## BayesFactor and the highest posterior density interval
##  obj: a t.test object (list of 9)
##  unit: the measurement unit, standard is ms
article.ttest_full <- function(obj=NULL, dz=NULL, BF=NULL,unit="ms") {
  
  library(coda)
  library(BayesFactor)

  d <- dz
  estimatey <- NULL
  estimatex <- signif(unname(obj$estimate[1]),4)
  if(!is.na(obj$estimate[2])) estimatey <- signif(unname(obj$estimate[2]),4)
  df <- round(unname(obj$parameter),digits=2)
  statistic <- round(unname(obj$statistic),digits=2)
  
  p <- round(unname(obj$p.value),digits=3)
  if(p < 0.001) p <- "p < .001"
  else p <- paste("p = ",substring(toString(p), 2),sep="")
  
  hpd <- HPDinterval(invisible(posterior(BF, iterations = 10000)))
  ci1 <- signif(HPDinterval(BFsamples)[1,1],4)
  ci2 <- signif(HPDinterval(BFsamples)[1,2],4)
  cip <- attr(HPDinterval(BFsamples), "Probability")
  
  if(is.null(estimatey)) est_string = paste("M = ", estimatex," ",unit, sep="") 
  else est_string = paste(estimatex," ",unit," vs ",estimatey," ",unit, sep="")
  
  bayes <- signif(extractBF(BF)$bf, 4)
  
  string <- paste(
    est_string,
    "; t(",df,") = ",statistic, 
    ", ",p, 
    ", dz = ",round(d, digits=2),
    ", ",cip*100, "% HPD [",ci1, " ",unit, ", ",ci2," ",unit,"]",
    ", BF10 = ",bayes,
    sep="")
  
  return(string)
}

## Produces article-ready APA output for an ezANOVA
##  obj: the ezANOVA output object
article.ezANOVA <- function(aov=NULL) {
  
  string <- ""
  
  for(i in 1:nrow(aov$ANOVA)){
    if(aov$ANOVA$Effect[i] != "(Intercept)"){
      effect <- paste(gsub(":", " X ", aov$ANOVA$Effect[i])," ",sep="")
      sig <- ifelse(aov$ANOVA$`p<.05`[i] == "*", "significant", "not significant")
      
      if(grepl(" X ", effect)) text <- paste("The interaction ",effect, "was ",sig,": ",sep="")
      else text <- paste("The main effect ",effect, "was ",sig,": ",sep="")
      
      DFn <- aov$ANOVA$DFn[i]
      DFd <- aov$ANOVA$DFd[i]
      f <- round(aov$ANOVA$F[i],digits=2)
      
      peta <- round(aov$ANOVA$SSn[i]/(aov$ANOVA$SSn[i]+aov$ANOVA$SSd[i]), digits = 2)
      
      p <- round(aov$ANOVA$p[i],digits=3)
      if(p < 0.001) p <- "p < .001"
      else p <- paste("p = ",substring(toString(p), 2),sep="")
      
      substring <- paste(
        text,
        "F(",DFn,", ",DFd,") = ",f, 
        ", ",p, 
        ", p-eta^2 = ",peta,
        sep="")
      
      string <- paste(string, substring, sep="; ")
    }
  }

  return(substring(string,3))
}
